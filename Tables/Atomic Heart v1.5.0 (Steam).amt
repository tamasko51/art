"ArtMoney Table","20","8.15","197CEE8C","E36E09FB","VP0","1","1","english","AtomicHeart  ","AtomicHeart-Win64-Shipping.exe","","824fad535e47db6660baf35e0ccc466e","04/09/2023","2","10","0","1","256","9","","19045","Richard","Vienna,Austria","aon.at","richardxxx","M","64","N","Y","Y","Y","Y","N","2","Get--Health;F3410F5E7744 498B47?? 498D4F??;E;;0C;A;S;","Get-Elements;498B441F28 4539641F30 75??;C;;0C;A;S;","3","","Test","","Elements","","Health","","Created on Steam-Version of 'Atomic Heart' 1.4.0.0  in April 2023Tested on 1.5.0.0 (+Module-Addressing Update)Start Artmoney, Start the Game, Start playingthen Load Artmoney Table 'AtomicHeart.amt'Table uses Autoinject !For Manual Change:Table/Info/Code injecting:' Replace all Codes'* Health-Cheat=1 Sets Health to max.-Health (on Attack)Material must be there (>0) before Change of Value is possibleMaterials are in 2 Groups with Offset=r15+rbx+30hwhere r15=50 Metal-Parts and Neuropolymer (2nd.Group)  1st. Round                     / 2nd. Roundr15=000 for Synteticr15=050 for  Metal-Parts / Neuropolymerr15=0A0 for Bior15=0F0 for Superconductorr15=140 for Chemier15=190 for Energie-Modulr15=1E0 for Microelectronicsr15=230 fo Neuro-Modul","Health_Range dq 0Element_Range dq 0Neuropolymer_R dq 0Health_Cheat dd 1","-- Read: Table/Info/Comment --","000000000000","","","","nt3","","","","","0","- Start ARTM, Start Game, Continue, Load Table -","000000000000","","","","nt3","","","","","0","* Health-Cheat        1=max.Health, 0=OFF","Health_Cheat+000000000000","","","","ni1&","","","","","0","  Health-1     (Info)","Health_Range+P000000000000,80","","","","nf4.2&","","","","","1","  Health-Bar   (Info)","Health_Range+P000000000000,84","","","","nf4.2&","","","","","1","  Health-Range (Info)","Health_Range+000000000000","","","","ni8h&","","","","","0","- Get Material to get Values (Edit if >0) -","000000000000","","","","nt3","","","","","0","*  Neuropolymer","Neuropolymer_R+P000000000000,48","","","","ni4&","","","","","0","1. Element Metal-Parts","Element_Range+P000000000000,128","","2","","ni4&","","","","","0","2. Element Syntetic","Element_Range+P000000000000,48","","2","","ni4&","","","","","0","3. Element Bio","Element_Range+P000000000000,208","","2","","ni4&","","","","","0","4. Element Superconductor","Element_Range+P000000000000,288","","2","","ni4&","","","","","0","5. Element Chemie","Element_Range+P000000000000,368","","2","","ni4&","","","","","0","6. Element Microelectronics","Element_Range+P000000000000,528","","2","","ni4&","","","","","0","7. Element Energie-Modul","Element_Range+P000000000000,448","","2","","ni4&","","","","","0","8. Element Neuro-Modul","Element_Range+P000000000000,608","","2","","ni4&","","","","","0","-- CODE / Injection Part --","000000000000","","","","nt3","","","","","0","# Get Health & Cheat   divss xmm6,[r15+44]","Get--Health+000000000000","","","","nc5$","","","","","0","Y","0","F3410F5E7744","mov eax,42C80000 // 100 dec for CHAR checkcmp eax,[r15+40]jnz No_Health_Cheatmov [Health_Range],r15 // set Rangemov eax, [Health_Cheat]test eax,eaxjz No_Health_Cheatmov eax,[r15+44] // get max-Healthmov [r15+50],eax // save Health-1mov [r15+54],eax // save Health-BarNo_Health_Cheat:PutOriginalCode","# Search Elements     mov rax,[r15+rbx+28]","Get-Elements+000000000000","","","","nc5$","","","","","0","Y","0","498B441F28","cmp eax,2 // Selectorjnz Inv_Endcmp r15,50  // first Element in Group, then A0,F0,140,190,1E0,230jz Inv_2      // 1. Group=Elements, 2nd Group=Neuro-Modulmov [Element_Range],rbxjmp Inv_EndInv_2:cmp rbx,[Element_Range]je Inv_End // must be differentmov [Neuropolymer_R],rbx // save RangeInv_End:PutOriginalCode","- For ARTM-PRO Elements: Structure-Search -","000000000000","","","","nt3","","","","","0","2. Element Syntetic Structure","000000000030","","1","","ni4","","","","","0","1. Element Metal Parts","000000000080","","1","","ni4","","","","","0","3. Element Bio","0000000000D0","","1","","ni4","","","","","0","-- Reserve using Module-Addressing --","000000000000","","","","nt3","","","","","0","# Get Health & Cheat   divss xmm6,[r15+44]","AtomicHeart-Win64-Shipping.exe+000001BBDD05","","","","nc5","","","","","0","N","0","F3410F5E7744","mov eax,42C80000 // 100 dec for CHAR checkcmp eax,[r15+40]jnz No_Health_Cheatmov [Health_Range],r15 // set Rangemov eax, [Health_Cheat]test eax,eaxjz No_Health_Cheatmov eax,[r15+44] // get max-Healthmov [r15+50],eax // save Health-1mov [r15+54],eax // save Health-BarNo_Health_Cheat:PutOriginalCode","# Search Elements     mov rax,[r15+rbx+28]","AtomicHeart-Win64-Shipping.exe+000001E16CE4","","","","nc5","","","","","0","N","0","4539641F30","cmp eax,2 // Selectorjnz Inv_Endcmp r15,50  // first Element in Group, then A0,F0,140,190,1E0,230jz Inv_2      // 1. Group=Elements, 2nd Group=Neuro-Modulmov [Element_Range],rbxjmp Inv_EndInv_2:cmp rbx,[Element_Range]je Inv_End // must be differentmov [Neuropolymer_R],rbx // save RangeInv_End:PutOriginalCode","-- END --","000000000000","","","","nt3","","","","","0"